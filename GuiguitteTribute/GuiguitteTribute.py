import time
import thumby
import math
import random

S=0
C1=32.70
Cs1=Db1=34.65
D1=36.71
Ds1=Eb1=38.89
E1=41.20
F1=43.65
Fs1=Gb1=46.25
G1=49.00
Gs1=Ab1=51.91
A1=55.00
As1=Bb1=58.27
B1=61.74
C2=65.41
Cs2=Db2=69.30
D2=73.42
Ds2=Eb2=77.78
E2=82.41
F2=87.31
Fs2=Gb2=92.50
G2=98.00
Gs2=Ab2=103.83
A2=110.00
As2=Bb2=116.54
B2=123.47
C3=130.81
Cs3=Db3=138.59
D3=146.83
Ds3=Eb3=155.56
E3=164.81
F3=174.61
Fs3=Gb3=185.00
G3=196.00
Gs3=Ab3=207.65
A3=220.00
As3=Bb3=233.08
B3=246.94
C4=261.63
Cs4=Db4=277.18
D4=293.66
Ds4=Eb4=311.13
E4=329.63
F4=349.23
Fs4=Gb4=369.99
G4=392.00
Gs4=Ab4=415.30
A4=440.00
As4=Bb4=466.16
B4=493.88
C5=523.25
Cs5=Db5=554.37
D5=587.33
Ds5=Eb5=622.25
E5=659.25
F5=698.46
Fs5=Gb5=739.99
G5=783.99
Gs5=Ab5=830.61
A5=880.00
As5=Bb5=932.33
B5=987.77
C6=1046.50
Cs6=Db6=1108.73
D6=1174.66
Ds6=Eb6=1244.51
E6=1318.51
F6=1396.91
Fs6=Gb6=1479.98
G6=1567.98
Gs6=Ab6=1661.22
A6=1760.00
As6=Bb6=1864.66
B6=1975.53
C7=2093.00
Cs7=Db7=2217.46
D7=2349.32
Ds7=Eb7=2489.02
E7=2637.02
F7=2793.83
Fs7=Gb7=2959.96
G7=3135.96
Gs7=Ab7=3322.44
A7=3520.00
As7=Bb7=3729.31
B7=3951.07



notes=[
C1,Cs1,D1,Ds1,E1,F1,Fs1,G1,Gs1,A1,As1,B1,C2,Cs2,D2,Ds2,E2,F2,Fs2,
G2,Gs2,A2,As2,B2,C3,Cs3,D3,Ds3,E3,F3,Fs3,G3,Gs3,A3,As3,B3,C4,Cs4,D4,
Ds4,E4,F4,Fs4,G4,Gs4,A4,As4,B4,C5,Cs5,D5,Ds5,E5,F5,Fs5,G5,Gs5,A5,
As5,B5,C6,Cs6,D6,Ds6,E6,F6,Fs6,G6,Gs6,A6,As6,B6,C7,Cs7,D7,Ds7,E7,F7,Fs7,
G7,Gs7,A7,As7,B7
]

gameOverMusicStr="B2_2,As2_2,A2_2,Gs2_8"
winMusicStr="C4_2,C4_1,C4_1,G4_4"

ucealMusicStr="Ds4_2,As3_2,Ds3_2,Cs4_1,Gs3_1,Cs3_4"


glouglouStr="""
150_1,S_4,
160_1,S_4,
205_1,S_4,
255_1,S_4
"""
collideStr="""
t200_0.2,t160_0.2,t140_0.2,t120_0.2,t100_0.2,t80_0.2
"""

#ragePlusMusicStr="""D4_4,E4_1,Fs4_1,E4_2,D4_2,A3_2,S_2,
#E4_4,Fs4_1,G4_1,Fs4_2,E4_2,A3_2,S_2,
#D4_4,E4_1,Fs4_1,E4_2,D4_2,A3_2,S_2,
#A4_1,A4_1,B4_1,B4_1,C5_1,C5_1,E5_1,D5_1,E5_1,D5_1,B4_2"""
ragePlusMusicStr="""D3_3,D3_1,F3_1,G3_2,E3_3,C3_2,A2_2,C3_2,D3_3,
D3_1,F3_1,G3_2,A3_2,E3_2,E3_1,F3_1,E3_2,D3_4,
D3_1,F3_1,G3_2,E3_3,C3_2,A2_2,C3_2,D3_3,
D3_1,F3_1,G3_2,A3_2,E3_2,E3_1,F3_1,E3_2,D3_4""" 
odeToJoyStr="""
B4_2,B4_2,C5_2,D5_2,D5_2,C5_2,B4_2,A4_2,G4_2,G4_2,A4_2,B4_2,B4_3,A4_1,A4_2,S_1,
B4_2,B4_2,C5_2,D5_2,D5_2,C5_2,B4_2,A4_2,G4_2,G4_2,A4_2,B4_2,A4_3,G4_1,G4_2,S_1,
A4_2,A4_2,B4_2,G4_2,A4_2,B4_1,C5_1,B4_2,G4_2,
A4_1,A4_1,B4_1,C5_1,B4_2,A4_2,G4_2,A4_2,D4_2,S_1,
B4_2,B4_2,C5_2,D5_2,D5_2,C5_2,B4_2,A4_2,G4_2,G4_2,A4_2,B4_2,A4_3,G4_1,G4_4"""
ohSusannaMusicStr="""
Fs3_1,Gs3_1,As3_2,Cs4_2,Cs4_3,Ds4_1,Cs4_2,As3_2,Fs3_2,Fs3_1,Gs3_1,As3_2,As3_2,Gs3_2,Fs3_2,Gs3_4,S_2,
Fs3_1,Gs3_1,As3_2,Cs4_2,Cs4_3,Ds4_1,Cs4_2,As3_2,Fs3_2,Fs3_1,Gs3_1,As3_2,As3_2,Gs3_2,Gs3_2,Fs3_4,S_2,
B3_4,B3_3,B3_1,Ds4_2,Ds4_4,Ds4_2,Cs4_2,Cs4_2,As3_2,Fs3_2,Gs3_4,S_2,
Fs3_1,Gs3_1,As3_2,Cs4_2,Cs4_3,Ds4_1,Cs4_2,As3_2,Fs3_2,Fs3_1,Gs3_1,As3_2,As3_2,Gs3_2,Gs3_2,Fs3_4,S_2
"""
libreDeDroitMusicStr="""
F4_2,F4_2,F4_2,E4_4,S_2,
C4_2,C4_2,D4_2,E4_2,D4_2,C4_2,tC4_1,tG3_1,tA3_1,S_2,
G3_2,E4_2,D4_2,C4_2,D4_2,S_2,
G3_2,E4_2,D4_2,C4_2,D4_2,S_2,
C4_2,E4_2,D4_2,C4_2,C4_2,
G4_3,F4_3,E4_3,D4_2,C4_4
"""

#B3_2,C4_3,A3_1,C4_2,E4_8,B3_2,
#B2_2,C3_3,A2_1,C3_2,E3_8,B4_2,
#B3_2,C4_3,A3_1,C4_2,F3_2,B3_4,
#G3_3,B3_1,E3_2,G2_8

#G4_3,D4_1,G4_2,B2_8
valkyriesMusicStr="""
B2_2,E3_3,B2_1,E3_2,G3_4,E3_4,
G3_3,E3_1,G3_2,B3_4,G3_4,
B3_3,G3_1,B3_2,D4_4,D3_4,
G3_3,D3_1,G3_2,B3_8,
S_4,
G3_3,D3_1,G3_2,B3_4,G3_4,
B3_3,G3_1,B3_2,D4_4,B3_4,
D4_3,B3_1,D4_2,Fs4_4,Fs3_4,
B3_3,Fs3_1,B3_2,Ds4_8,
S_2

"""
codeMusicStr="""
G5_1,C6_1,E6_1,C6_1,D6_1,G6_2"""
class Note:
    def __init__(self, frequency, nbBeat):
        self.frequency=frequency
        #nombre de "temps"
        self.nbBeat=nbBeat
        #afin d'entendre l'attaque de chaque note,
        #la durée réelle d'une note est de nbBeat * beatDuration - 1/10ème de beatDuration
        # tremolo sert à ne pas supprimer ce 10ème de beat
        self.tremolo=False
        self._isStarted=False
        #nombre de "temps" précedent dans la musique
        self._startBeat=0

class Music:
    def __init__(self, musicStr, beatDuration):
        self.notes=[]
        self.currentNote=0
        self._startTime=-1
        self.beatDuration=beatDuration
        self._parse(musicStr)

    def _parse(self, musicStr):
        notesStr = musicStr.split(',')
        total=0
        for n in notesStr:
            detail=n.strip().split('_')
            tremolo=False
            if detail[0][0]=='t':
                tremolo=True
                detail[0]=detail[0][1:]
            note=Note(round(eval(detail[0])), eval(detail[1]))
            note._startBeat=total
            note.tremolo=tremolo
            self.notes+=[note]
            total+=note.nbBeat

    def _findNote(self):
        ct=time.ticks_ms()
        previous=self.notes[0]
        for n in self.notes:
            if ct - self._startTime <= n._startBeat * self.beatDuration:
                return previous
            previous=n
        if ct - self._startTime < (n._startBeat +n.nbBeat)* self.beatDuration:
            return previous
        return None
        
    def play(self):
        if self._startTime <= 0:
            self._startTime=time.ticks_ms()
            for note in self.notes:
                note.isStarted=False
        note=self._findNote()
        if note != None and not note.isStarted:
            note.isStarted=True
            if note.frequency > 0:
                duration = note.nbBeat * self.beatDuration;
                if not note.tremolo:
                     duration -= self.beatDuration/10
                thumby.audio.play(note.frequency, round(duration))
        elif note == None:
            print("ended")
            self.stop()

    def stop(self):
        self._startTime=-1
        thumby.audio.stop()

    def isPlaying(self):
        return self._startTime>0

music=Music(ragePlusMusicStr, 200)
#music=Music(collideStr, 100)
class AlphaSprite:
    def __init__(self, width, height, dataB, dataW, x=0, y=0, mirrorX=0, mirrorY=0):
        self.spriteB=thumby.Sprite(width, height, dataB, x, y, 1, mirrorX, mirrorY)
        self.spriteW=thumby.Sprite(width, height, dataW, x, y, 0, mirrorX, mirrorY)

    def draw(self):
        thumby.display.drawSprite(self.spriteB)
        thumby.display.drawSprite(self.spriteW)
    def setX(self, x):
        self.spriteB.x = x
        self.spriteW.x = x
    def setY(self, y):
        self.spriteB.y = y
        self.spriteW.y = y
    def getX(self):
        return self.spriteB.x
    def getY(self):
        return self.spriteB.y
    def getWidth(self):
        return self.spriteB.width
    def getHeight(self):
        return self.spriteB.height
    def setMirrorX(self, x):
        self.spriteB.mirrorX = x
        self.spriteW.mirrorX = x
    def setMirrorY(self, y):
        self.spriteB.mirrorY = y
        self.spriteW.mirrorY = y
    def setFrame(self, frame):
        self.spriteB.setFrame(frame)
        self.spriteW.setFrame(frame)
    def getFrame(self):
        return self.spriteB.getFrame()


class Level:
    def __init__(self):
        self.name="Niveau 1"
        self.fencesPos=[]
        self.gatesPos=[]
        self.gatesType=[]
        self.bottlesPos=[]
        self.bottlesPosY=[]
        self.bottlesCollected=[]
        self.end=600
        self.scrollSpeed = 40 # px/s
        self.music=Music(odeToJoyStr,200)
    def reset(self):
        self.bottlesCollected=[]
        for b in self.bottlesPos:
            self.bottlesCollected+=[0]
# 72x40 for 1 frames
bitmap0 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,63,135,99,129,177,65,3,7,31,63,63,31,63,63,127,255,255,255,255,255,255,255,127,255,255,255,255,192,24,164,143,135,151,247,247,247,247,247,247,247,247,247,231,207,15,23,144,1,67,255,255,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,131,57,32,12,4,0,0,3,25,252,60,140,4,134,132,76,0,4,132,14,159,255,255,255,255,255,255,254,252,250,56,20,0,114,249,249,241,249,249,255,255,255,27,233,245,245,246,119,45,31,126,104,233,193,33,240,240,241,250,248,252,255,255,255,255,255,255,255,255,255,255,255,255,248,112,38,41,29,209,242,252,248,123,96,79,239,109,105,244,237,13,175,128,31,127,255,255,63,143,231,193,192,192,224,224,240,255,255,15,3,249,253,255,255,248,241,243,243,243,227,250,248,243,131,7,123,248,255,255,255,255,255,255,255,255,255,255,255,127,15,7,35,19,227,137,128,13,240,192,0,31,63,119,114,112,112,240,97,96,225,161,129,177,241,49,0,0,1,0,0,12,253,255,255,255,255,255,255,255,255,56,0,224,243,231,231,192,28,38,130,90,176,85,255,255,215,255,62,114,66,4,0,131,255,255,255,7,3,35,0,196,176,85,184,239,50,12,15,208,120,136,220,224,176,231,238,150,38,134,42,200,248,56,49,0,80,128,0,48,240,248,252,254,255,255,252,3,31,255,255,255,187,0,0,15,255,255,255,255,255,254,253,249,245,240,228,240,248,248,252,254,255,255,255,255,255,255,255])
# Make a sprite object using bytearray (a path to binary file from 'IMPORT SPRITE' is also valid)
titleSprite = thumby.Sprite(72, 40, bitmap0)

# 60x21 for 1 frames
titleB = bytearray([3,253,254,2,18,242,242,1,254,254,1,1,254,254,1,2,254,254,2,1,253,254,2,18,242,242,1,254,254,1,1,254,254,1,2,254,254,2,249,242,2,254,254,2,242,249,242,2,254,254,2,242,1,254,254,18,18,18,74,249,252,249,251,251,251,251,227,200,9,251,251,11,203,3,248,251,75,75,251,176,9,227,11,251,251,11,0,249,251,75,75,251,179,0,251,251,3,3,248,251,0,203,11,248,251,11,203,0,251,251,72,75,72,43,227,251,251,251,251,248,31,31,31,31,31,31,31,31,0,15,15,0,31,0,15,15,0,0,15,15,12,3,12,15,15,12,0,15,15,12,12,15,7,0,7,15,12,12,15,15,0,31,0,15,15,0,31,0,15,15,12,12,12,13,3,31,31,31,31,31])
titleW = bytearray([0,252,254,2,18,242,242,0,254,254,0,0,254,254,0,2,254,254,2,0,252,254,2,18,242,242,0,254,254,0,0,254,254,0,2,254,254,2,0,2,2,254,254,2,2,0,2,2,254,254,2,2,0,254,254,18,18,18,2,0,0,1,3,3,3,3,3,8,9,251,251,11,11,3,248,251,75,75,251,176,1,3,11,251,251,11,0,249,251,75,75,251,179,0,251,251,3,3,248,248,0,11,11,248,248,8,8,0,251,251,72,72,72,11,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,15,15,0,0,15,15,12,0,12,15,15,12,0,15,15,12,12,15,7,0,7,15,12,12,15,15,0,0,0,15,15,0,0,0,15,15,12,12,12,12,0,0,0,0,0,0])
titleSprite2 = AlphaSprite(60, 21, titleB, titleW, 6, 10)

# 28x19 for 5 frames
#cow = bytearray([255,127,63,223,239,239,239,239,239,223,223,31,31,31,31,31,111,239,243,235,217,226,248,235,247,239,223,63,192,127,128,255,99,1,192,32,177,191,127,191,126,188,220,206,7,79,191,127,255,131,125,254,254,254,254,255,7,0,1,0,7,6,1,0,1,7,7,7,7,7,7,0,1,6,7,6,1,1,0,7,7,7,7,7,127,191,63,223,239,111,111,239,239,207,15,15,15,47,111,239,239,239,231,215,179,197,241,215,239,223,191,127,192,255,192,49,224,224,48,184,191,127,191,126,188,222,199,195,195,39,255,255,63,195,251,253,253,253,253,254,7,7,7,0,1,0,7,7,7,7,7,7,7,7,7,7,7,0,1,0,7,7,7,7,7,7,7,7,255,127,63,223,239,239,239,239,239,223,223,31,31,31,31,111,239,239,243,235,217,226,248,235,247,239,223,63,192,255,96,131,193,64,160,113,255,127,191,126,188,188,62,143,199,71,143,127,255,131,125,254,254,254,254,255,7,7,0,1,0,6,1,1,0,7,7,7,7,7,0,1,1,6,7,6,1,1,0,7,7,7,7,7,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,127,255,255,255,255,255,31,239,7,55,27,27,27,27,251,251,247,231,199,199,231,235,123,123,252,250,254,56,222,218,221,219,235,231,6,7,1,0,0,6,1,1,1,5,5,5,5,5,1,0,0,6,6,6,1,0,1,7,7,7,7,7,127,191,31,239,247,119,119,247,247,239,239,15,15,15,15,183,247,247,249,245,236,241,252,117,123,119,111,159,32,31,64,33,128,128,224,232,239,239,231,247,246,246,247,247,243,243,199,175,191,177,174,175,175,175,143,143,7,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7])
#cowW = bytearray([0,0,0,192,224,224,224,224,224,192,192,0,0,0,0,0,96,224,240,232,216,226,248,232,240,224,192,0,0,0,128,255,99,1,192,32,49,63,127,63,126,60,28,14,7,79,63,127,255,131,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,192,224,96,96,224,224,192,0,0,0,32,96,224,224,224,224,208,176,196,240,208,224,192,128,0,0,0,0,49,224,224,48,56,63,127,63,126,60,30,7,3,3,39,255,255,63,3,3,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,192,224,224,224,224,224,192,192,0,0,0,0,96,224,224,240,232,216,226,248,232,240,224,192,0,0,0,0,131,193,64,160,113,255,127,63,126,60,60,62,143,199,71,15,127,255,131,1,0,0,0,0,0,0,0,0,1,0,6,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,24,24,24,24,248,248,240,224,192,192,224,232,120,120,252,250,254,56,30,26,28,24,8,0,0,0,0,0,0,6,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,128,0,224,240,112,112,240,240,224,224,0,0,0,0,176,240,240,248,244,236,241,252,116,120,112,96,0,0,31,64,33,0,0,0,8,15,15,7,7,6,6,7,7,3,3,7,47,63,49,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
# 29x22 for 7 frames
cow = bytearray([247,231,231,251,251,55,199,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,23,239,239,239,232,231,233,247,248,63,63,63,63,63,62,1,15,1,38,13,5,1,61,0,15,0,61,1,14,0,63,63,63,63,63,63,63,63,255,247,231,231,251,59,199,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,215,175,111,239,232,231,233,247,248,63,63,63,63,55,34,1,15,1,38,45,53,57,61,0,15,0,61,37,0,14,51,60,63,63,63,63,63,63,255,251,243,243,253,61,195,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,215,47,239,239,232,231,233,247,248,63,63,63,63,63,62,9,7,12,10,5,53,57,61,60,51,14,9,5,54,59,60,63,63,63,63,63,63,63,255,247,231,231,251,59,199,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,23,239,239,239,232,231,233,247,248,63,63,63,49,48,56,11,7,12,34,53,53,57,45,4,3,46,49,61,56,55,36,35,39,63,63,63,63,63,247,231,231,251,251,55,199,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,127,249,240,112,153,255,255,227,193,65,193,99,255,59,23,239,239,239,232,231,233,247,248,63,63,63,39,7,2,36,55,57,38,13,5,1,37,1,12,39,56,1,14,0,63,63,63,63,63,63,63,63,255,247,231,231,251,59,199,239,207,143,143,143,143,207,239,239,239,233,198,245,245,248,253,141,251,7,127,127,255,255,255,255,199,32,227,255,249,240,112,153,255,255,227,193,193,193,227,255,59,23,111,111,111,232,231,233,247,248,51,49,58,58,61,61,61,61,60,62,61,61,61,61,61,61,61,61,61,62,61,61,61,61,60,60,63,63,63,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,255,255,127,255,255,255,255,255,255,255,255,249,249,123,29,45,241,187,19,19,179,243,243,115,59,27,59,120,243,186,122,124,126,114,29,99,47,111,159,63,63,63,46,37,51,23,15,27,41,46,47,55,55,58,38,30,7,23,49,44,43,39,47,63,63,63,63,63])
cowW = bytearray([0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,23,15,15,15,8,7,9,7,0,0,0,0,0,0,0,1,15,1,6,13,5,1,1,0,15,0,1,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,215,143,15,15,8,7,9,7,0,0,0,0,0,0,0,1,15,1,6,13,5,1,1,0,15,0,1,1,0,14,3,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,215,15,15,15,8,7,9,7,0,0,0,0,0,0,0,1,7,12,10,5,5,1,1,0,3,14,9,5,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,255,249,240,112,153,255,255,227,65,193,65,227,255,59,23,15,15,15,8,7,9,7,0,0,0,0,0,0,0,3,7,12,2,5,5,1,1,0,3,14,1,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,127,249,240,112,153,255,255,227,193,65,193,99,255,59,23,15,15,15,8,7,9,7,0,0,0,0,0,0,0,4,7,1,6,13,5,1,1,1,12,7,0,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,192,128,128,128,128,192,224,224,224,224,198,244,244,248,252,140,248,0,0,0,0,0,0,0,0,32,227,255,249,240,112,153,255,255,227,193,193,193,227,255,59,23,15,15,15,8,7,9,7,0,0,0,2,2,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,240,184,16,16,176,240,240,112,56,24,56,120,243,186,122,124,126,114,28,96,32,96,0,0,0,0,0,1,3,7,15,27,9,14,15,7,7,2,6,30,7,7,1,12,8,0,0,0,0,0,0,0])
cowSpr = AlphaSprite(29, 22, cow, cowW, 0, 18)

# 20x22 for 1 frames
cowFace = bytearray([63,31,255,255,249,118,5,245,249,141,253,253,253,253,141,249,245,5,118,249,255,255,252,251,192,131,70,253,115,237,98,238,238,98,205,67,193,98,191,192,63,63,63,63,63,63,0,13,0,15,0,53,53,0,15,0,13,0,63,63])
cowFaceW = bytearray([0,0,0,0,0,6,4,244,248,140,252,252,252,252,140,248,244,4,6,0,0,0,0,0,0,3,70,253,115,237,98,238,238,98,205,67,193,98,63,0,0,0,0,0,0,0,0,13,0,15,0,5,5,0,15,0,13,0,0,0])
# 15x22 for 1 frames
#cowFace = bytearray([121,182,177,196,6,185,235,219,233,57,132,192,182,185,127,0,255,255,255,241,242,246,247,242,241,255,127,255,255,0,63,0,14,0,60,57,53,57,53,57,60,0,15,0,63])
#cowFaceW = bytearray([0,134,128,196,6,184,232,216,232,56,132,192,134,128,0,0,255,255,255,241,242,246,247,242,241,255,127,255,255,0,0,0,14,0,0,1,5,1,5,1,0,0,15,0,0])
cowFaceSpr = AlphaSprite(20, 22, cowFace, cowFaceW, -100, 18)

# 72x40 for 1 frames
bg = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,192,32,240,144,112,112,224,192,0,0,0,0,0,0,0,0,0,0,64,128,192,224,224,240,252,252,252,252,252,248,240,240,224,129,128,0,0,0,0,0,0,0,8,0,4,0,2,0,0,0,0,32,0,128,128,128,192,192,192,128,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,5,6,6,3,1,0,0,0,0,0,0,128,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,248,240,240,224,0,0,0,128,136,224,224,248,252,252,254,255,255,255,255,255,255,255,255,252,248,248,240,224,192,128,128,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,191,63,127,127,127,63,191,191,191,191,159,223,223,207,239,231,243,251,249,253,252,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,252,248,240,224,192,192,192,192,192,128,128,128,128,128,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255])
# 72x40 for 1 frames
bg2 = bytearray([0,0,0,0,0,0,0,0,0,16,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,112,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,4,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,16,0,0,1,0,0,0,0,1,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,240,248,254,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,136,192,192,224,224,240,240,240,248,252,254,255,255,255,255,255,254,254,254,254,254,254,254,254,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255])


# Background sprites & x positions
bgSpr = thumby.Sprite(72, 40, bg)
bg2Spr = thumby.Sprite(72, 40, bg2)
bgSpr.x = 0
bg2Spr.x = 72

# 31x40 for 3 frames
grosNeness = bytearray([255,255,255,255,255,255,255,255,255,255,127,63,63,31,31,31,3,60,62,62,62,124,121,195,159,191,191,63,127,255,255,255,255,255,255,255,255,255,255,255,127,191,191,179,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,214,48,255,255,255,255,255,255,255,255,255,252,243,231,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,240,252,252,255,255,255,255,255,255,255,255,255,255,247,241,248,248,248,57,9,201,209,49,17,241,250,48,209,148,70,207,47,159,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,31,31,31,30,2,60,35,12,29,56,57,36,14,254,255,255,255,255,127,191,223,223,223,191,63,255,255,255,127,63,63,31,31,31,3,60,62,62,62,124,121,195,159,191,191,63,127,255,255,248,251,247,194,12,239,243,252,255,127,191,191,179,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,214,48,255,255,255,255,193,192,193,199,199,204,195,199,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,240,252,252,255,255,255,255,255,255,255,255,255,255,247,241,248,248,248,57,9,201,209,49,17,241,250,48,209,148,70,207,47,159,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,31,31,31,30,2,60,35,12,29,56,57,36,14,254,255,255,255,255,195,221,190,22,102,125,153,231,255,255,127,63,63,31,31,31,3,60,62,62,62,124,121,195,159,191,191,63,127,255,255,255,255,255,254,254,255,255,255,255,127,191,191,179,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,214,48,255,255,255,255,193,193,193,199,199,204,195,199,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,240,252,252,255,255,255,255,255,255,255,255,255,255,247,241,248,248,248,57,9,201,209,49,17,241,250,48,209,148,70,207,47,159,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,31,31,31,30,2,60,35,12,29,56,57,36,14,254,255,255,255,255])
grosNenessW = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,62,62,62,124,120,192,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,198,0,0,0,0,0,0,0,0,0,0,0,3,7,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,193,209,49,17,241,250,48,209,144,64,192,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,35,12,29,56,57,32,0,0,0,0,0,0,0,128,192,192,192,128,0,0,0,0,0,0,0,0,0,0,0,60,62,62,62,124,120,192,128,128,128,0,0,0,0,0,3,7,2,12,15,3,0,0,0,128,128,128,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,198,0,0,0,0,127,65,64,65,71,68,76,67,71,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,193,209,49,17,241,250,48,209,144,64,192,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,35,12,29,56,57,32,0,0,0,0,0,0,0,28,62,22,102,124,24,0,0,0,0,0,0,0,0,0,0,60,62,62,62,124,120,192,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,198,0,0,0,0,127,65,65,65,71,68,76,67,71,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,193,209,49,17,241,250,48,209,144,64,192,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,35,12,29,56,57,32,0,0,0,0,0,0])
# 30x40 for 1 frames
#grosNeness = bytearray([127,191,223,223,223,191,63,255,255,255,127,63,63,31,31,31,3,60,62,62,62,124,121,195,159,191,191,63,127,255,248,251,247,194,12,239,243,252,255,127,191,191,179,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,214,48,255,255,255,193,192,193,199,199,204,195,199,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,240,252,252,255,255,255,255,255,255,255,255,255,247,241,248,248,248,57,9,201,209,49,17,241,250,48,209,148,70,207,47,159,255,255,255,255,255,255,255,255,255,255,255,255,255,127,31,31,31,30,2,60,35,12,29,56,57,36,14,254,255,255,255])
#grosNenessW = bytearray([0,128,192,192,192,128,0,0,0,0,0,0,0,0,0,0,0,60,62,62,62,124,120,192,128,128,128,0,0,0,0,3,7,2,12,15,3,0,0,0,128,128,128,128,169,233,239,227,235,233,200,240,224,243,243,195,3,7,198,0,0,0,127,65,64,65,71,68,76,67,71,15,231,135,131,129,131,162,161,167,239,227,231,63,191,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,193,209,49,17,241,250,48,209,144,64,192,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,35,12,29,56,57,32,0,0,0,0,0])
grosNenessSpr = AlphaSprite(31, 40, grosNeness, grosNenessW, -100, 0)

# 7x20 for 1 frames
bottle = bytearray([255,127,128,252,128,127,255,1,254,255,15,15,14,1,8,7,7,4,4,4,8])
bottleInside = bytearray([0,0,128,252,128,0,0,0,254,255,15,15,14,0,0,7,7,4,4,4,0])
bottleSpr = AlphaSprite(7, 20, bottle, bottleInside, -100, 0)

# 28x40 for 1 frames
borne = bytearray([255,192,222,30,222,94,94,94,94,94,94,94,94,94,94,94,94,64,222,30,254,254,254,252,253,253,249,3,255,255,255,0,255,0,255,255,255,255,255,255,255,255,255,255,255,0,255,0,255,255,255,255,255,255,255,0,127,63,159,192,175,104,171,235,171,171,171,235,235,171,171,235,107,40,143,192,255,255,255,255,255,255,255,0,224,238,14,238,238,238,238,238,238,238,238,238,238,238,238,238,224,239,15,255,63,255,63,255,63,255,255,0,255,255,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,127,112,127,112,127,112,127,127,0])
borneInside = bytearray([0,0,30,30,222,94,94,94,94,94,94,94,94,94,94,94,94,64,222,30,254,254,254,252,252,252,248,0,0,0,0,0,255,0,255,255,255,255,255,255,255,255,255,255,255,0,255,0,255,255,255,255,255,255,255,0,0,0,128,192,175,104,171,235,171,171,171,235,235,171,171,235,107,40,143,192,255,255,255,255,255,255,255,0,0,14,14,238,238,238,238,238,238,238,238,238,238,238,238,238,224,239,15,255,63,255,63,255,63,255,255,0,0,0,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,127,112,127,112,127,112,127,127,0])
borneSpr = AlphaSprite(28, 40, borne, borneInside, -100, 0)

# 8x20 for 1 frames
fence = bytearray([7,249,7,183,219,3,252,3,0,255,0,237,246,0,255,0,0,7,0,15,15,12,13,12])
fenceW = bytearray([0,248,0,48,24,0,252,0,0,255,0,12,6,0,255,0,0,7,0,0,0,0,1,0])
fenceSpr = AlphaSprite(8, 20, fence, fenceW, 40, 20)


# 8x30 for 1 frames
gateBack = bytearray([255,255,255,255,255,0,254,0,255,255,255,255,255,0,255,0,255,255,255,255,255,0,255,0,63,63,63,63,63,60,61,60])
gateBackW = bytearray([0,0,0,0,0,0,254,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,1,0])
gateBackSpr = AlphaSprite(8, 30, gateBack, gateBackW, 20, 10)


# 8x30 for 2 frames
gateFront = bytearray([15,231,11,245,122,255,255,255,0,255,0,254,255,255,255,255,0,255,0,255,255,255,255,255,0,31,0,63,63,63,63,63,15,231,11,245,122,255,255,255,0,255,0,222,239,255,255,255,0,255,0,251,253,255,255,255,0,31,0,63,63,63,63,63])
gateFrontW = bytearray([0,224,8,244,122,0,0,0,0,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,224,8,244,122,0,0,0,0,255,0,192,224,0,0,0,0,255,0,3,1,0,0,0,0,31,0,0,0,0,0,0])
# 8x30 for 1 frames
#gateFront = bytearray([15,239,15,255,255,255,255,255,0,255,0,255,255,255,255,255,0,255,0,255,255,255,255,255,0,31,0,63,63,63,63,63])
#gateFrontW = bytearray([0,224,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,31,0,0,0,0,0,0])
gateFrontSpr = AlphaSprite(8, 30, gateFront, gateFrontW, 20, 10)

# 56x40 for 2 frames
bulleB = bytearray([0,252,254,254,254,254,30,238,238,110,94,254,62,254,62,254,46,254,126,190,190,62,254,254,62,254,62,254,46,254,222,14,222,222,14,222,254,62,94,62,254,254,254,254,254,254,254,254,252,0,255,255,255,255,255,255,0,255,255,255,255,255,254,253,125,125,126,127,124,253,252,255,252,255,254,245,245,248,255,255,252,253,252,255,252,255,255,254,253,127,254,189,127,254,253,253,127,247,249,255,255,255,255,255,255,0,255,255,255,255,255,255,0,255,255,255,255,255,255,255,255,255,224,255,255,225,239,225,255,255,255,255,255,241,234,233,255,255,233,234,246,255,255,255,255,224,255,230,234,225,255,255,232,255,255,255,255,255,255,255,31,152,51,103,79,31,127,255,0,255,255,255,255,127,123,131,255,159,111,111,111,159,255,15,127,15,255,159,111,111,111,159,255,15,247,15,255,255,79,87,183,255,255,255,255,67,255,255,67,255,255,67,255,255,255,255,0,255,255,255,255,255,254,254,0,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,63,0,255,255,255,255,255,255,255,0,252,254,254,254,254,30,238,238,110,94,254,62,254,62,254,46,254,126,190,190,62,254,254,62,254,62,254,46,254,222,14,222,222,14,222,254,62,94,62,254,254,254,254,254,254,254,254,252,0,255,255,255,255,255,255,0,255,255,255,127,191,190,189,125,253,254,223,188,253,252,255,252,255,254,117,117,248,255,255,124,125,252,255,252,127,63,126,253,255,254,253,255,254,253,253,255,183,185,191,127,255,255,255,255,0,255,255,255,255,255,255,0,255,255,255,248,247,247,247,248,255,240,247,247,240,255,255,255,255,248,245,245,244,255,244,245,243,255,253,253,255,248,247,255,248,247,247,248,255,255,255,255,255,245,254,255,255,255,255,31,152,51,103,79,31,127,255,0,255,255,255,195,189,189,173,203,255,135,191,135,255,133,255,207,183,183,7,255,255,135,191,135,255,133,255,251,193,187,251,193,187,255,199,171,167,255,255,161,255,161,255,161,255,255,255,0,255,255,255,255,255,254,254,0,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,63,0,255,255,255,255,255,255,255])
bulleW = bytearray([0,252,254,254,254,254,30,238,238,110,94,254,62,254,62,254,46,254,126,190,190,62,254,254,62,254,62,254,46,254,222,14,222,222,14,222,254,62,94,62,254,254,254,254,254,254,254,254,252,0,0,0,0,0,0,0,0,255,255,255,255,255,254,253,125,125,126,127,124,253,252,255,252,255,254,245,245,248,255,255,252,253,252,255,252,255,255,254,253,127,254,189,127,254,253,253,127,247,249,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,224,255,255,225,239,225,255,255,255,255,255,241,234,233,255,255,233,234,246,255,255,255,255,224,255,230,234,225,255,255,232,255,255,255,255,255,255,255,31,24,48,96,64,0,0,0,0,255,255,255,255,127,123,131,255,159,111,111,111,159,255,15,127,15,255,159,111,111,111,159,255,15,247,15,255,255,79,87,183,255,255,255,255,67,255,255,67,255,255,67,255,255,255,255,0,0,0,0,0,0,0,0,0,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,63,0,0,0,0,0,0,0,0,0,252,254,254,254,254,30,238,238,110,94,254,62,254,62,254,46,254,126,190,190,62,254,254,62,254,62,254,46,254,222,14,222,222,14,222,254,62,94,62,254,254,254,254,254,254,254,254,252,0,0,0,0,0,0,0,0,255,255,255,127,191,190,189,125,253,254,223,188,253,252,255,252,255,254,117,117,248,255,255,124,125,252,255,252,127,63,126,253,255,254,253,255,254,253,253,255,183,185,191,127,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,248,247,247,247,248,255,240,247,247,240,255,255,255,255,248,245,245,244,255,244,245,243,255,253,253,255,248,247,255,248,247,247,248,255,255,255,255,255,245,254,255,255,255,255,31,24,48,96,64,0,0,0,0,255,255,255,195,189,189,173,203,255,135,191,135,255,133,255,207,183,183,7,255,255,135,191,135,255,133,255,251,193,187,251,193,187,255,199,171,167,255,255,161,255,161,255,161,255,255,255,0,0,0,0,0,0,0,0,0,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,63,0,0,0,0,0,0,0,0])
# 56x40 for 1 frames
#bulleB = bytearray
#bulleW = bytearray([0,252,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,252,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,24,48,96,64,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,63,0,0,0,0,0,0,0,0])
bulleSpr = AlphaSprite(56, 40, bulleB, bulleW)


# 13x11 for 1 frames
#sayanHairB = bytearray([31,225,11,91,232,109,221,187,199,187,1,191,127,7,4,3,5,0,7,6,6,5,2,5,3,4])
#sayanHairW = bytearray([0,224,8,88,232,108,220,184,192,184,0,128,0,0,0,3,1,0,0,0,0,1,2,1,3,0])
# 14x12 for 1 frames
sayanHairB = bytearray([31,224,149,109,234,216,254,222,185,183,119,187,93,227,15,8,7,8,7,9,14,14,14,9,7,2,13,8])
sayanHairW = bytearray([0,224,148,108,232,216,254,222,184,176,112,184,28,0,0,0,7,0,7,1,0,0,0,1,7,2,1,0])
sayanHairSpr = AlphaSprite(14, 12, sayanHairB, sayanHairW)

frameRate = 60
godMode = False

# Set the FPS (without this call, the default fps is 30)
thumby.display.setFPS(frameRate)

def drawScene():
    thumby.display.fill(1)
    thumby.display.drawSprite(bgSpr)
    thumby.display.drawSprite(bg2Spr)
    fenceSpr.draw();
    gateBackSpr.draw()
    bottleSpr.draw()
    cowSpr.draw()
    if godMode:
        sayanHairSpr.setX(cowSpr.getX()+16)
        if cowSpr.getFrame() != 6:
            sayanHairSpr.setY(cowSpr.getY()-4)
        else:
            sayanHairSpr.setY(cowSpr.getY()+1)
        sayanHairSpr.draw()
    cowFaceSpr.draw()
    borneSpr.draw()
    grosNenessSpr.draw()
    gateFrontSpr.draw()

def waitForButton():
    wasPressed = False
    while(True):
        if not wasPressed and (thumby.buttonA.pressed() or thumby.buttonB.pressed()):
            wasPressed=True
        elif wasPressed and not thumby.buttonA.pressed() and not thumby.buttonB.pressed():
            break
        thumby.display.update()
        ## hack: justPressed seems buggy
        thumby.buttonA.justPressed()
        thumby.buttonB.justPressed()

thumby.display.fill(0) # Fill canvas to black
thumby.display.drawSprite(titleSprite)
thumby.display.update()
music.play()

codeState=0
t0=time.ticks_ms()
displayedHelp=False
while(1):
    a=thumby.buttonA.justPressed()
    b=thumby.buttonB.justPressed()
    up=thumby.buttonU.justPressed()
    down=thumby.buttonD.justPressed()
    left=thumby.buttonL.justPressed()
    right=thumby.buttonR.justPressed()
    if music.isPlaying():
        music.play()
    if (codeState == 0 or codeState == 1) and up:
        codeState+=1
    elif (codeState == 2 or codeState == 3) and down:
        codeState+=1
    elif (codeState == 4 or codeState == 6) and left:
        codeState+=1
    elif (codeState == 5 or codeState == 7) and right:
        codeState+=1
    elif codeState == 8 and b:
        codeState+=1
    elif codeState ==9 and a:
        codeState+=1
    elif a or b or up or down or left or right:
        codeState=0
    if codeState == 10:
        godMode = True
        codeState = 0
        music.stop()
        print("konami code")
        music=Music(codeMusicStr,100)
        music.play()
        a=False
        b=False
    if codeState == 0 and (a or b):
        break
    if not displayedHelp and time.ticks_ms() - t0 > 8000:
        titleSprite2.draw()
        thumby.display.drawFilledRectangle(5, 31, 62, 10, 0)
        thumby.display.drawText("Press A", 15, 32, 1)
        thumby.display.update()
        displayedHelp=True
music.stop()

collideMusic = None
if godMode:
    collideMusic = Music(collideStr, 100)


def playGenerique(text):
    lines=text.split('\n')
    music = Music(libreDeDroitMusicStr,200)
    t0=time.ticks_ms()
    scroll = 0
    ct=0
    size=100
    thumby.display.setFont("/lib/font5x7.bin", 5, 7, 0)
    music.play()
    while(scroll < len(lines)*8+10):
        thumby.display.fill(0)
        lineNum=0
        for l in lines:
            thumby.display.drawText(l, 0, 20 - round(scroll)+lineNum*8, 1)
            lineNum+=1
        thumby.display.update()
        scroll=ct/1000*20
        if music.isPlaying():
            music.play()
        ct=time.ticks_ms()-t0
    music.stop()
    
def playEndLevel(nbBottles):
    cowSpr.setX(-100)
    cowFaceSpr.setX(0)
    drawScene()
    thumby.display.update()
    time.sleep(0.5)
    bottleSpr.setY(10)
    currentNBBottles=nbBottles
    if nbBottles > 2:
        bottleSpr.setX(30)
        bottleSpr.draw()
    if nbBottles >= 2:
        bottleSpr.setX(38)
        bottleSpr.draw()
    if nbBottles > 0:
        bottleSpr.setX(45)
        bottleSpr.draw()
    thumby.display.update()
    time.sleep(1)
    music=Music(glouglouStr, 80)
    while currentNBBottles > 0:
        drawScene()
        bottleSpr.setY(10)
        if currentNBBottles > 2:
            bottleSpr.setMirrorY(0)
            bottleSpr.setX(30)
            bottleSpr.draw()
        if currentNBBottles >= 2:
            bottleSpr.setMirrorY(0)
            bottleSpr.setX(38)
            bottleSpr.draw()
        if currentNBBottles > 0:
            bottleSpr.setX(45)
            bottleSpr.setMirrorY(1)
            bottleSpr.draw()
        thumby.display.update()
        music.play()
        while(music.isPlaying()):
            music.play()
        currentNBBottles-=1
        time.sleep(0.5)
    bottleSpr.setMirrorY(0)
    bottleSpr.setX(-100)
    drawScene()
    bulleSpr.setX(0)
    thumby.display.setFont("/lib/font5x7.bin", 5, 7, 0)
    if nbBottles<2:
        #thumby.display.drawText("Guiguitte", 2, 5, 0)
        #thumby.display.drawText("Ou es-tu ?", 2, 13, 0)
        bulleSpr.setFrame(1)
        bulleSpr.draw()
    else:
        bulleSpr.setFrame(0)
        bulleSpr.draw()
        #thumby.display.drawText("Guiguitte", 2, 5, 0)
        #thumby.display.drawText("Tu es la", 2, 13, 0)
        #thumby.display.drawText("Jouons!", 5, 21, 0)
    
    waitForButton()
    thumby.display.update()
    if nbBottles>=2:
        grosNenessSpr.setFrame(1)
        grosNenessSpr.setMirrorX(1)
        grosNenessSpr.setX(20)
        drawScene()
        borneSpr.setX(50)
        borneSpr.draw()
        thumby.display.update()
        time.sleep(2)
        grosNenessSpr.setFrame(2)
        drawScene()
        thumby.display.update()
        borneSpr.setX(-100)
    else:
        drawScene()
        thumby.display.update()
    grosNenessSpr.setFrame(0)
    grosNenessSpr.setMirrorX(0)
    print("end anim end level")
    
def playEndGame():
    # 72x40 for 1 frames
    screen_end = bytearray([1,252,254,254,254,254,254,254,254,254,254,254,254,254,254,226,158,62,158,226,158,110,158,254,10,254,2,254,52,82,14,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,255,255,255,127,63,63,31,63,63,31,7,3,65,177,129,99,135,63,127,255,255,255,255,255,255,255,0,255,255,255,255,255,195,189,189,173,203,255,135,191,135,255,133,255,207,183,183,7,255,135,191,135,255,133,255,251,193,187,251,193,187,255,199,171,167,127,191,255,255,255,255,0,255,255,255,159,14,132,4,0,76,132,134,4,140,60,252,25,3,0,0,4,12,32,57,131,255,255,0,255,195,191,191,195,255,135,247,143,255,199,171,167,255,255,255,135,247,142,254,207,183,183,207,255,135,191,135,255,231,159,231,255,199,171,167,255,129,255,129,255,199,171,167,0,255,255,31,128,175,13,237,244,105,109,239,79,96,123,248,252,242,209,29,41,38,112,248,255,255,255,0,255,255,255,255,255,255,255,219,213,197,255,203,211,199,255,194,255,91,213,69,255,231,219,219,231,127,195,251,199,255,255,255,231,219,193,255,227,213,211,255,255,255,255,255,12,237,91,16,1,241,177,129,161,225,96,97,240,112,112,114,119,63,31,0,192,240,13,128,137,227,19,128,63,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,96,125,127,97,127,97,125,99,127,97,127,113,106,105,127,111,127,127,127,127,127,127,127,127,127,127,127,63,128,251,120,24,128,80,0,49,56,248,200,42,134,38,150,238,231,176,224,220,136,120,208,15,12,50,239])
    screen_endSpr=thumby.Sprite(72,40,screen_end)
    thumby.display.drawSprite(screen_endSpr)
    thumby.display.update()
    screen_end=None
    screen_endSpr=None
    waitForButton()
    # 72x40 for 1 frames
    screen_end = bytearray([255,255,255,255,255,255,255,127,255,255,255,255,192,24,164,143,135,151,247,247,247,247,247,247,247,247,247,231,207,15,23,144,1,67,255,255,255,255,255,1,252,254,254,254,254,14,174,174,174,254,14,222,222,254,254,254,126,190,190,126,254,62,190,126,254,254,254,254,254,254,252,0,255,255,255,255,255,255,254,252,250,56,20,0,114,249,249,241,249,249,255,255,255,27,233,245,245,246,119,45,31,126,104,233,193,33,240,240,241,250,248,0,255,255,255,255,255,252,253,253,253,15,214,253,93,159,63,255,22,253,237,6,239,252,255,252,255,255,255,255,255,255,255,0,255,255,255,255,63,143,231,193,192,192,224,224,240,255,255,15,3,249,253,255,255,248,241,243,243,243,227,250,248,243,131,7,123,248,255,63,95,111,179,216,31,255,255,255,255,207,183,183,7,254,135,191,134,254,150,167,142,255,135,247,142,255,207,183,131,255,255,255,255,255,255,0,15,7,1,0,0,12,253,255,255,255,255,255,255,255,255,56,0,224,243,231,231,192,28,38,130,90,176,85,255,255,215,255,62,114,66,4,0,131,255,255,0,255,255,255,255,255,255,255,254,255,255,255,255,129,255,151,167,143,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,48,240,248,252,254,255,255,252,3,31,255,255,255,187,0,0,15,255,255,255,255,255,254,253,249,245,240,228,240,248,248,252,254,255,255,255,255,255,255,0,63,127,127,91,85,85,111,127,67,95,67,127,66,127,125,96,93,127,99,85,83,127,127,126,86,122,125,127,127,63,0])
    screen_endSpr=thumby.Sprite(72,40,screen_end)
    thumby.display.drawSprite(screen_endSpr)
    thumby.display.update()
    screen_end=None
    screen_endSpr=None
    waitForButton()
    # 72x40 for 1 frames
    screen_end = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,252,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,134,50,122,50,134,254,14,126,14,254,10,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,252,1,255,255,255,255,255,255,255,127,63,159,159,159,159,31,159,159,63,255,255,255,255,255,0,255,255,255,255,255,255,255,255,129,243,207,129,255,199,171,167,255,135,251,135,255,199,171,167,255,183,171,171,223,183,171,171,223,255,199,171,167,255,161,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,15,224,96,22,135,183,183,167,183,135,71,39,176,7,95,111,179,216,31,255,255,255,255,255,255,135,218,133,255,255,255,207,183,183,7,255,135,191,135,255,151,167,143,255,135,247,143,255,207,183,131,255,255,255,135,191,135,255,135,247,143,255,255,255,255,255,0,63,159,239,239,239,238,238,225,158,185,179,183,151,229,229,231,227,232,239,159,127,255,255,0,255,3,251,251,75,75,251,179,15,15,247,251,75,75,251,246,15,247,251,11,75,203,203,7,251,251,75,75,75,43,7,223,223,223,193,253,253,253,193,223,223,223,31,247,183,215,239,0,0,223,223,7,191,96,238,241,255,224,234,255,248,231,248,127,191,7,223,223,0,255,255,128,63,96,111,111,96,96,111,111,108,96,111,111,96,96,111,111,96,103,111,108,108,111,111,96,111,111,108,109,109,109,96,125,125,125,65,95,95,95,65,125,125,125,124,127,126,127,63,128])
    screen_endSpr=thumby.Sprite(72,40,screen_end)
    thumby.display.drawSprite(screen_endSpr)
    thumby.display.update()
    screen_end=None
    screen_endSpr=None
    waitForButton()
    # 72x40 for 1 frames
    screen_end = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,191,191,191,191,191,191,63,191,191,191,191,191,63,255,127,191,191,191,191,191,63,63,191,191,191,191,63,255,63,191,191,191,191,63,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,63,159,159,159,159,31,159,159,63,255,255,255,255,255,255,255,255,255,255,255,255,254,254,0,255,255,0,254,0,255,255,4,4,255,251,192,0,127,255,193,193,255,255,0,192,255,255,192,222,223,30,192,255,255,192,222,223,31,255,255,255,255,255,255,255,255,255,255,255,15,224,96,22,135,183,183,167,183,135,71,39,176,7,255,255,255,255,255,255,255,255,255,255,255,255,254,254,254,254,255,254,254,254,254,254,254,254,254,30,222,222,222,222,222,30,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,63,159,239,239,239,238,238,225,158,185,179,182,149,229,229,231,227,232,239,159,127,255,255,255,255,255,255,255,255,191,95,239,247,251,241,247,247,247,247,247,247,247,247,247,240,255,255,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,223,223,7,191,96,238,241,255,224,234,255,248,231,248,127,191,7,223,223,0,255,255,255,255,255,255,255,255,255,255,254,253,251,241,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255])
    screen_endSpr=thumby.Sprite(72,40,screen_end)
    # 72x40 for 1 frames
    screen_end2 = bytearray([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,63,159,159,159,159,31,159,159,63,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,224,96,22,135,183,183,167,183,135,71,39,176,7,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,159,239,239,239,238,238,225,158,185,179,182,149,229,229,231,227,232,239,159,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,223,223,7,191,96,238,241,255,224,234,255,248,231,248,127,191,7,223,223,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255])
    screen_end2Spr=thumby.Sprite(72,40,screen_end2)
    count = 0
    t=time.ticks_ms()
    while count < 20:
        if count%2 == 0:
            thumby.display.drawSprite(screen_endSpr)
        else:
            thumby.display.drawSprite(screen_end2Spr)
        thumby.display.update()
        if (thumby.buttonA.justPressed() or thumby.buttonB.justPressed()):
            break
        if time.ticks_ms()-t > 1000:
            t=time.ticks_ms()
            count+=1
        
def playLevel(level):
    level.reset()
    thumby.display.setFont("/lib/font5x7.bin", 5, 7, 0)
    thumby.display.fill(0)
    thumby.display.drawText(level.name, 0, 15, 1)
    thumby.display.update()
    waitForButton()
    thumby.display.update()
    scrollCtr = 0
    frame=0
    jumpTime = -1
    slideTime = -1
    t0 = time.ticks_ms()
    tlast = time.ticks_ms()
    gameOver=False
    level.music.play()
    while(1):
        if collideMusic != None and collideMusic.isPlaying():
            collideMusic.play()
        elif level.music.isPlaying():
            level.music.play()
        currentTime = time.ticks_ms()   # Get time (ms)
        dt=currentTime-tlast
        
        
        # Scrolling
        scrollCtr = round((currentTime-t0)/1000*level.scrollSpeed)
        
        if(scrollCtr % 2 == 0):
            bgSpr.x -= 1
            bg2Spr.x -= 1
    
        # Re-place the x coordinate of backgrounds when they're unseen
        if (bg2Spr.x == 0):
            bgSpr.x = 72
        if (bg2Spr.x == -72):
            bg2Spr.x = 72
    
        
        if jumpTime == -1 and slideTime == -1 and (thumby.buttonA.justPressed() or thumby.buttonB.justPressed()):
            jumpTime = 0
        if jumpTime == -1 and slideTime == -1 and thumby.buttonD.justPressed():
            slideTime = 0
        
        if jumpTime < 0 and slideTime < 0:
            cowSpr.setFrame(int(frame))
            frame+=dt / 2500 * level.scrollSpeed
            if frame > 4:
                frame=0
        elif slideTime >=0:
            cowSpr.setFrame(6)
            cowSpr.setY(18)
            slideTime+=dt
            if slideTime > 1000 * 35.0/level.scrollSpeed:
                slideTime=-1
                cowSpr.setY(18)
        else:
            cowSpr.setFrame(5)
            cowSpr.setY(4)
            jumpTime+=dt
            if jumpTime > 1000 * 35.0/level.scrollSpeed:
                jumpTime=-1
                cowSpr.setY(18)
        found=False
        for f in level.fencesPos:
            if scrollCtr < f + fenceSpr.getWidth() and scrollCtr > f - thumby.display.width - fenceSpr.getWidth():
                found=True
                fenceSpr.setX(f-scrollCtr)
                break
        if not found:
            fenceSpr.setX(-100)
        else:
            if jumpTime < 0 and fenceSpr.getX() < cowSpr.getWidth() and fenceSpr.getX() > 5:
                if godMode:
                    level.fencesPos=[x for x in level.fencesPos if x - scrollCtr != fenceSpr.getX()]
                    collideMusic.play()
                else:
                    gameOver=True
                    print("fence hitted")
                    drawScene()
                    thumby.display.update()
                    break
        found=False
        i=0
        for f in level.gatesPos:
            if scrollCtr < f+ gateFrontSpr.getWidth() and scrollCtr > f - thumby.display.width - gateFrontSpr.getWidth():
                found=True
                gateFrontSpr.setX(f-scrollCtr)
                gateBackSpr.setX(f-scrollCtr)
                gateFrontSpr.setFrame(level.gatesType[i])
                break
            i+=1
        if not found:
            gateFrontSpr.setX(-100)
            gateBackSpr.setX(-100)
        else:
            if jumpTime >= 0 and gateBackSpr.getX() < cowSpr.getWidth() and gateBackSpr.getX() > 5:
                 if godMode:
                    level.gatesPos=[x for x in level.gatesPos if x - scrollCtr != gateBackSpr.getX()]
                    collideMusic.play()
                 else:
                    print("gate hitted 1")
                    gameOver=True
                    drawScene()
                    thumby.display.update()
                    break
            elif slideTime < 0 and gateBackSpr.getX() < cowSpr.getWidth() and gateBackSpr.getX() > 5 and gateFrontSpr.getFrame() == 1:
                 if godMode:
                    level.gatesPos=[x for x in level.gatesPos if x - scrollCtr != gateBackSpr.getX()]
                    collideMusic.play()
                 else:
                    print("gate hitted 2")
                    gameOver=True
                    drawScene()
                    thumby.display.update()
                    break
        found=False
        i=0
        for f in level.bottlesPos:
            if level.bottlesCollected[i] == 0 and scrollCtr < f + bottleSpr.getWidth() and scrollCtr > f - thumby.display.width:
                found=True
                bottleSpr.setX(f-scrollCtr)
                if level.bottlesPosY[i] == 0:
                    bottleSpr.setY(20)
                else:
                    bottleSpr.setY(0)
                break
            i+=1
        if not found:
            bottleSpr.setX(-100)
        else:
            if (jumpTime >= 0 and bottleSpr.getY() == 0 or jumpTime < 0 and bottleSpr.getY() != 0) \
                    and bottleSpr.getX() < cowSpr.getWidth() and bottleSpr.getX() > 5:
                level.bottlesCollected[i] = 1
                print("bottle collected")
        # end level management
        if scrollCtr > level.end-thumby.display.width+grosNenessSpr.getWidth():
            grosNenessSpr.setX(level.end+thumby.display.width-grosNenessSpr.getWidth()-scrollCtr)
        else:
            grosNenessSpr.setX(-100)
        if scrollCtr >= level.end:
            drawScene()
            thumby.display.update()
            break
        drawScene()
        #thumby.display.drawFilledRectangle(5, 31, 62, 10, 0)
        #thumby.display.drawText(str(frame), 15, 32, 1)
        thumby.display.update()
        tlast = currentTime
    
    level.music.stop()
    if gameOver:
        music=Music(gameOverMusicStr, 200)
    else:
        bottlesCollected = level.bottlesCollected.count(1)
        if bottlesCollected>=2:
            music=Music(winMusicStr, 200)
        else:
            music=Music(gameOverMusicStr, 200)
            gameOver=True
        playEndLevel(bottlesCollected)
        
    music.play()
    while(music.isPlaying()):
        music.play()
    waitForButton()
    cowSpr.setX(0)
    cowSpr.setY(18)
    cowFaceSpr.setX(-100)
    return gameOver

level1 = Level()
level1.name="   Niveau 1"
level1.fencesPos=[180,420,600]
level1.gatesPos=[100,220,350,500,720]
level1.gatesType=[0,0,0,1,0,1]
level1.bottlesPos=[180,300,555]
level1.bottlesPosY=[1,1,0]
level1.bottlesCollected=[0,0,0]
level1.end=72*11
level1.scrollSpeed = 30 # px/s
level1.music=Music(odeToJoyStr,200)
gameOver = False
gameOver = playLevel(level1)
while gameOver:
    gameOver = playLevel(level1)

if not gameOver:
    level2 = Level()
    level2.name="   Niveau 2"
    level2.fencesPos=[100,200,300,400,500,600,700]
    level2.gatesPos=[150,250,350,450,550,650,750]
    level2.gatesType=[0,1,0,1,0,1,0]
    level2.bottlesPos=[170,300,555]
    level2.bottlesPosY=[1,1,0]
    level2.bottlesCollected=[0,0,0]
    level2.end=72*12
    level2.scrollSpeed = 40 # px/s
    level2.music=Music(ohSusannaMusicStr,170)
    gameOver = playLevel(level2)
    while gameOver:
        cowSpr.setX(0)
        cowSpr.setY(18)
        gameOver = playLevel(level2)

if not gameOver:
    cowSpr.setX(0)
    cowSpr.setY(18)
    cowFaceSpr.setX(-100)
    level3 = Level()
    level3.name="   Niveau 3"
    level3.fencesPos=[100,230,320,400,500,700]
    level3.gatesPos=[150,280,350,450,550,622,730]
    level3.gatesType=[0,0,1,1,1,0,1]
    level3.bottlesPos=[170,525,650]
    level3.bottlesPosY=[1,1,1]
    level3.bottlesCollected=[0,0,0]
    level3.end=72*13
    level3.scrollSpeed = 50 # px/s
    level3.music=Music(valkyriesMusicStr,150)
    gameOver = playLevel(level3)
    while gameOver:
        cowSpr.setX(0)
        cowSpr.setY(18)
        gameOver = playLevel(level3)

playEndGame()

genericText = """
  Guiguitte
   Tribute

--------------
Programmation

    Ping

--------------
  Graphisme

     JYP
    Ping

--------------
  Adaptation
    Images
    
     JYP
    Ping
--------------
   Musiques

  Gen. RAGE+
  8bit-hero

Ode a la joie
  Beethoven

 Oh Susanna
  Stephen
   Foster

La chevauchee
des Walkyries
Richard Wagner

Libre de droit
    Gilles
    Stella
--------------
  Adaptation
   Musiques

     Ping
     JYP
--------------
"""
if not gameOver:
    playGenerique(genericText)
def checkObstablePos(level, type, pos):
    for f in level.fencesPos:
        if type == 0:
            if abs(f-pos) < 72:
                return False
        elif type == 1:
            if abs(f-pos) < 40:
                return False
    for f in level.gatesPos:
        if type == 0:
            if abs(f-pos) < 40:
                return False
        elif type == 1:
            if abs(f-pos) < 72:
                return False
    return True
def fixBottleHeight(level):
    i=0
    for b in level.bottlesPos:
        for f in level.fencesPos:
            if abs(f-b) < 2:
                level.bottlesPosY[i]=1
        for f in level.gatesPos:
            if abs(f-b) < 5:
                level.bottlesPosY[i]=0
        i+=1
def generateLevel(speed):
    level=Level()
    level.name = " Vitesse "+str(speed)
    nbScreens = round(11 * speed/40)
    level.end = 72 * nbScreens
    retry=0
    i=0
    while i < nbScreens:
        pos = random.randrange((nbScreens-1) * 72)
        if checkObstablePos(level, 0, pos):
            level.fencesPos+=[pos]
            retry=0
            i+=1
        elif retry > 10:
            break
        else:
            retry+=1
    level.fencesPos.sort()
    retry=0
    i=0
    while i < nbScreens:
        pos = random.randrange(60, (nbScreens-1) * 72)
        if checkObstablePos(level, 1, pos):
            level.gatesPos+=[pos]
            level.gatesType+=[random.randrange(2)]
            retry = 0
            i+=1
        elif retry > 10:
            break
        else:
            retry+=1
            i-=1
    level.gatesPos.sort()
    #level.fencesPos=[100,230,320,400,500,700]
    #level.gatesPos=[150,280,350,450,550,622,730]
    #level.gatesType=[0,0,1,1,1,0,1]
    level.bottlesPos=[170,525,650]
    level.bottlesPosY=[1,1,1]
    fixBottleHeight(level)
    level.bottlesCollected=[0,0,0]
    level.scrollSpeed = speed # px/s
    level.music=Music(valkyriesMusicStr,150)
    #print(level.fencesPos)
    #print(level.gatesPos)
    #print(level.end)
    return level
    
currentSpeed = level3.scrollSpeed
godMode = False
while not gameOver:
    
    if currentSpeed < 80:
        currentSpeed += 5
    elif currentSpeed < 90:
        currentSpeed += 2
    else:
        currentSpeed += 1
    level = generateLevel(currentSpeed)
    gameOver = playLevel(level)

print("game ended")
thumby.reset()

